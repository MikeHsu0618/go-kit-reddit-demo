version: "3.8"
services:
  auth:
    build:
      context: .
      dockerfile: ./deployments/docker/auth/dockerfile
    container_name: auth
    ports:
      - 8081:8081
    networks:
      - backend

  user:
    build:
      context: .
      dockerfile:  ./deployments/docker/user/dockerfile
    container_name: user
    ports:
      - 8181:8181
    networks:
      - backend

  post:
    build:
      context: .
      dockerfile: ./deployments/docker/post/dockerfile
    container_name: post
    ports:
      - 8281:8281
    networks:
      - backend

  reddit:
    build:
      context: .
      dockerfile:  ./deployments/docker/reddit/dockerfile
    container_name: reddit
    ports:
      - 8381:8381
    networks:
      - backend

  user-db:
    container_name: user-db
    image: postgres:12.4-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=user
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - PGDATA=/var/lib/postgresql/data/pgdata
    restart: always
    networks:
      - backend
    volumes:
      - 'postgresql_user:/var/lib/postgresql/data/pgdata'

  post-db:
    container_name: post-db
    image: postgres:12.4-alpine
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_DB=post
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - PGDATA=/var/lib/postgresql/data/pgdata
    restart: always
    networks:
      - backend
    volumes:
      - 'postgresql_post:/var/lib/postgresql/data/pgdata'

networks:
  backend:
    driver: bridge

volumes:
  postgresql_user:
  postgresql_post:
    driver: local